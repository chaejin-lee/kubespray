apiVersion: v1
kind: ConfigMap
metadata:
  name: nodelocaldns
  namespace: kube-system
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists

data:
  Corefile: |
{% if nodelocaldns_external_zones is defined and nodelocaldns_external_zones|length > 0 %}
{% for block in nodelocaldns_external_zones %}
    {{ block['zones'] | join(' ') }} {
        errors
        cache {{ block['cache'] | default(30) }}
        reload
        loop
        bind {{ nodelocaldns_ip }}
        forward . {{ block['nameservers'] | join(' ') }}
        prometheus :9253
        log
{% if dns_etchosts | default(None) %}
        hosts /etc/coredns/hosts {
          fallthrough
        }
{% endif %}
    }
{% endfor %}
{% endif %}
    {{ dns_domain }}:53 {
        errors
        cache {
            success 9984 30
            denial 9984 5
        }
        reload
        loop
        bind {{ nodelocaldns_ip }}
        forward . {{ forwardTarget }} {
            force_tcp
        }
        prometheus :9253
        health {{ nodelocaldns_ip }}:{{ nodelocaldns_health_port }}
{% if dns_etchosts | default(None) %}
        hosts /etc/coredns/hosts {
          fallthrough
        }
{% endif %}
    }
    in-addr.arpa:53 {
        errors
        cache 30
        reload
        loop
        bind {{ nodelocaldns_ip }}
        forward . {{ forwardTarget }} {
            force_tcp
        }
        prometheus :9253
    }
    ip6.arpa:53 {
        errors
        cache 30
        reload
        loop
        bind {{ nodelocaldns_ip }}
        forward . {{ forwardTarget }} {
            force_tcp
        }
        prometheus :9253
    }
{% if enable_excoredns %}
    {{ excoredns_zone }}:53 {
        errors
        cache 30
        reload
        loop
        bind {{ nodelocaldns_ip }}
        forward . {{ excoredns_server }} {
          prefer_udp
        }
    }
{% endif %}
    .:53 {
        errors
        cache 30
        reload
        loop
        bind {{ nodelocaldns_ip }}
        prometheus :9253
{% if upstream_dns_servers is defined and upstream_dns_servers|length > 0 %}
        forward . {{ upstream_dns_servers|join(' ') }} {
          prefer_udp
        }
{% endif %}
{% if dns_etchosts | default(None) %}
        hosts /etc/coredns/hosts {
          fallthrough
        }
{% endif %}
{%- if enable_local_nip_domain | default(None) -%}{%- raw %}
        template IN A {
            match "(^|[.])(?P<a>[0-9]*)[.](?P<b>[0-9]*)[.](?P<c>[0-9]*)[.](?P<d>[0-9]*)[.](xip.io|nip.io)[.]$"
            answer "{{ .Name }} 60 IN A {{ .Group.a}}.{{ .Group.b }}.{{ .Group.c }}.{{ .Group.d }}"
            fallthrough
        }
{% endraw %}{% endif %}
{% if enable_custom_domain | default(None) %}
        template IN A {
            {% raw %}match "(^|[.])({% endraw %}{{ custom_domain_name }}{% raw %})[.]$"
            answer "{{ .Name }} 60 IN A {% endraw %}{{ custom_domain_ip }}"
            fallthrough
         }
{% endif %}
    }
{% if dns_etchosts | default(None) %}
  hosts: |
    {{ dns_etchosts | indent(width=4, indentfirst=None) }}
{% endif %}
